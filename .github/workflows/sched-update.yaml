# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  workflow_dispatch:
    inputs:
      speakers:
        description: Comma-separated list of sched usernames for speakers to update
        required: false
        default: ''
  push:
    branches: [main]
    paths: ['sessions/**.md']
  pull_request:
    branches: [main]
    paths: ['sessions/**.md', 'assets/**']

name: sched-update

jobs:
  sched-update:
    runs-on: ubuntu-20.04

    # Only run one deploy-to-sched workflow at a time on main
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || 'main' }}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      SCHED_CONF_2022: ${{ secrets.SCHED_CONF_2022 }}

    steps:
      - name: '[pr] Checkout repo'
        uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          fetch-depth: 0

      - name: '[main] Checkout repo'
        uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          fetch-depth: 0
          # Requires personal token to get around branch protections on `main`
          # This token has "repo" scope and a limited lifetime
          token: ${{ secrets.TOKEN_GITHUB }}

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2

      - uses: r-lib/actions/setup-renv@v2

      - name: Check talk YAML structure
        shell: Rscript {0}
        run: |
          # Read talks to ensure that YAML is valid
          source(here::here("R/00_utils.R"))
          talks <- read_talk_md(here::here("sessions"))

      - name: '[sched] Update talks'
        if: ${{ github.event_name != 'pull_request' }}
        env:
          SCHED_UPDATE_SPEAKERS: ${{ github.event.inputs.speakers }}
        run: Rscript 'R/01_talks.R'

      - name: '[json] Update program.json'
        if: ${{ github.event_name != 'pull_request' }}
        run: Rscript 'R/44_program-data.R'

      - name: '[json] Commit and push program.json'
        if: ${{ github.event_name != 'pull_request' }}

        run: |
          git config --local user.name "rstudio-conf-bot"
          git config --local user.email "rstudio-conf-bot@users.noreply.github.com"
          git add program.json && git commit -m "Update program.json" || echo "No program.json"
          git push origin main || echo "No updates to push"
